{{ 'section-image-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.padding_bottom | divided_by: 2 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{% assign _section = section.settings %}
{% assign _blocks = section.blocks %}

<section class="section-image-slider section-{{ section.id }}-padding">
  <div class="page-width">
    <image-slider>
      <div class="splide js-slider">
        <div class="splide__track">
          <ul class="splide__list">
            {% if _blocks.size > 0 %}
              {% for block in _blocks %}
                {% assign _block = block.settings %}
                
                <li class="splide__slide">
                  {%- assign desktop_image = _block.desktop_image -%}
                  {%- assign mobile_image = _block.mobile_image -%}
  
                  {% if desktop_image != blank or mobile_image != blank %}

                    {% if _block.link != blank %}
                      <a href="{{ _block.link }}">
                    {% endif %}

                      <div class="section__image section__image--desktop">
                        {{ desktop_image | image_url: width: desktop_image.width | image_tag: loading: 'lazy', desktop_image.presentation.focal_point }}
                      </div><!-- /.section__image -->
      
                      <div class="section__image section__image--mobile">
                        {{ mobile_image | image_url: width: mobile_image.width | image_tag: loading: 'lazy', mobile_image.presentation.focal_point }}
                      </div><!-- /.section__image -->
                      
                    {% if _block.link != blank %}
                      </a>
                    {% endif %}               
                  {% endif %}
                </li>
              {% endfor %}         
            {% else %}
              <li class="splide__slide">
                <div class="section__image section__image--empty">
                  {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
                </div><!-- /.section__image -->
              </li>
            {% endif %}
          </ul>
        </div>
      </div>
    </image-slider>
  </div><!-- /.page-width -->
</section><!-- /.section-image-slider -->

{% schema %}
  {
  "name": "Image Slider",
  "max_blocks": 5,
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "name": "Slide",
      "type": "slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "desktop_image",
          "label": "Desktop Image"
        },
        {
          "type": "image_picker",
          "id": "mobile_image",
          "label": "Mobile Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image Slider"
    }
  ]
}  
{% endschema %}

{% javascript %}
  (() => {
    if (customElements.get('image-slider')) {
      return;
    }

    class ImageSlider extends HTMLElement {
      constructor() {
        super();
        this.slider = null;
        this.options = {
          waitForTransition: false,
          autoplay: true,
          interval: 3000,
          type: 'loop',
          perPage: 1,
          pagination: false,
          gap: '2rem',
          arrows: false
        };
      }

      connectedCallback() {
        this.initSlider();
      }

      initSlider() {
        if (!this.querySelector('.js-slider')) return;

        this.slider = new Splide(
          this.querySelector('.js-slider'),
          this.options
        ).mount();
      }
    }

    customElements.define('image-slider', ImageSlider);
  })();
{% endjavascript %}